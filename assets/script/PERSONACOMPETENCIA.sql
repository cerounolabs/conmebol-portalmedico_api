CREATE TABLE [adm].[PERCOM](
	[PERCOMCOC] [int] NOT NULL,
	[PERCOMPEC] [int] NOT NULL,
	[PERCOMOBS] [varchar](5120) NULL,
	[PERCOMAUS] [char](50) NOT NULL,
	[PERCOMAFH] [datetime] NOT NULL,
	[PERCOMAIP] [char](20) NOT NULL,
 CONSTRAINT [PK_PERCOMCOC_PERCOMPEC] PRIMARY KEY CLUSTERED ([PERCOMCOC] ASC, [PERCOMPEC] ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]
GO

CREATE TABLE [adm].[PERCOMA](
	[PERCOMAIDD] [int] IDENTITY(1,1) NOT NULL,
    [PERCOMAMET] [char](20) NOT NULL,
	[PERCOMAUSU] [char](50) NOT NULL,
	[PERCOMAFEC] [datetime] NOT NULL,
	[PERCOMADIP] [char](20) NOT NULL,
    [PERCOMACOC] [int] NOT NULL,
	[PERCOMAPEC] [int] NOT NULL,
	[PERCOMAOBS] [varchar](5120) NULL,
 CONSTRAINT [PK_PERCOMAIDD] PRIMARY KEY CLUSTERED ([PERCOMAIDD] ASC) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]
GO

ALTER TABLE [adm].[PERCOM] WITH CHECK ADD CONSTRAINT [FK_PERCOM_PERCOMCOC] FOREIGN KEY([PERCOMCOC]) REFERENCES [comet].[competitions] ([competitionFifaId])
GO
ALTER TABLE [adm].[PERCOM] CHECK CONSTRAINT [FK_PERCOM_PERCOMCOC]
GO

ALTER TABLE [adm].[PERCOM] WITH CHECK ADD CONSTRAINT [FK_PERCOM_PERCOMPEC] FOREIGN KEY([PERCOMPEC]) REFERENCES [adm].[PERFIC] ([PERFICCOD])
GO
ALTER TABLE [adm].[PERCOM] CHECK CONSTRAINT [FK_PERCOM_PERCOMPEC]
GO

CREATE TRIGGER [adm].[PERCOM_INSERT] 
	ON [adm].[PERCOM]
	AFTER INSERT
	AS
	BEGIN
		SET NOCOUNT ON;
		INSERT INTO [adm].[PERCOMA] (PERCOMAMET, PERCOMAUSU, PERCOMAFEC, PERCOMADIP, PERCOMACOC, PERCOMAPEC, PERCOMAOBS)
		SELECT 'INSERT AFTER', i.PERCOMAUS, GETDATE(), i.PERCOMAIP, i.PERCOMCOC, i.PERCOMPEC, i.PERCOMOBS FROM INSERTED i;
	END
GO

CREATE TRIGGER [adm].[PERCOM_UPDATE] 
	ON [adm].[PERCOM]
	AFTER UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;
		INSERT INTO [adm].[PERCOMA] (PERCOMAMET, PERCOMAUSU, PERCOMAFEC, PERCOMADIP, PERCOMACOC, PERCOMAPEC, PERCOMAOBS)
		SELECT 'UPDATE BEFORE', d.PERCOMAUS, GETDATE(), d.PERCOMAIP, d.PERCOMCOC, d.PERCOMPEC, d.PERCOMOBS FROM DELETED d;

		INSERT INTO [adm].[PERCOMA] (PERCOMAMET, PERCOMAUSU, PERCOMAFEC, PERCOMADIP, PERCOMACOC, PERCOMAPEC, PERCOMAOBS)
		SELECT 'UPDATE AFTER', i.PERCOMAUS, GETDATE(), i.PERCOMAIP, i.PERCOMCOC, i.PERCOMPEC, i.PERCOMOBS FROM INSERTED i;
	END
GO

CREATE TRIGGER [adm].[PERCOM_DELETE] 
	ON [adm].[PERCOM]
	AFTER DELETE
	AS
	BEGIN
		SET NOCOUNT ON;
		INSERT INTO [adm].[PERCOMA] (PERCOMAMET, PERCOMAUSU, PERCOMAFEC, PERCOMADIP, PERCOMACOC, PERCOMAPEC, PERCOMAOBS)
		SELECT 'DELETE BEFORE', d.PERCOMAUS, GETDATE(), d.PERCOMAIP, d.PERCOMCOC, d.PERCOMPEC, d.PERCOMOBS FROM DELETED d;
	END
GO